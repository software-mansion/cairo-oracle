#!/usr/bin/env bash
set -euo pipefail

cd "$(dirname "$0")/../example"

EXPECTED_OUTPUT=$(cat <<'EOF'
Funny hash of 10000 is: Result::Ok(100000000)
Funny hash of 10001 is: Result::Err("value must be even")
Funny hash of 10002 is: Result::Ok(100040004)
Funny hash of 10003 is: Result::Err("value must be even")
Funny hash of 10004 is: Result::Ok(100080016)
Funny hash of 10005 is: Result::Err("value must be even")
Funny hash of 10006 is: Result::Ok(100120036)
Funny hash of 10007 is: Result::Err("value must be even")
Funny hash of 10008 is: Result::Ok(100160064)
Zip mul of [1, 2, 3, 4, 5, 6] and [6, 6, 7, 7, 8, 8] is: Result::Ok([6, 12, 21, 28, 40, 48])
State action with 42: Result::Ok(42)
State action with 7: Result::Ok(49)
State action with 12345: Result::Ok(12394)
EOF
)

TMP_OUTPUT="$(mktemp)"
trap 'rm -f "$TMP_OUTPUT"' EXIT
scarb execute --experimental-oracles | tee "$TMP_OUTPUT"
# Extract only the lines between the markers "Executing example" and "Saving output to...",
# excluding those marker lines. This removes extra wrapper output before/after the example.
# Use awk to print lines strictly between the markers.
ACTUAL_OUTPUT=$(awk '/Executing example/{found=1;next} /Saving output to:/{exit} found' "$TMP_OUTPUT")

if [[ "$ACTUAL_OUTPUT" != "$EXPECTED_OUTPUT" ]]; then
    echo "Output does not match expected!"
    EXPECTED_FILE=".expected.txt"
    ACTUAL_FILE=".actual.txt"
    {
      echo "$EXPECTED_OUTPUT" > "$EXPECTED_FILE"
      echo "$ACTUAL_OUTPUT" > "$ACTUAL_FILE"
      git --no-pager diff --no-index --word-diff --color=always "$EXPECTED_FILE" "$ACTUAL_FILE"
    } || true
    rm "$EXPECTED_FILE" "$ACTUAL_FILE"
    exit 1
fi
